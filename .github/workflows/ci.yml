name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install deps
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -U pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8 black

      - name: Lint (flake8)
        run: |
          source .venv/bin/activate
          flake8 app || true

      - name: Format check (black)
        run: |
          source .venv/bin/activate
          black --check app || true

      - name: Tests
        run: |
          source .venv/bin/activate
          pytest -q --maxfail=1 --disable-warnings

  frontend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json', 'frontend/pnpm-lock.yaml', 'frontend/yarn.lock') }}

      - name: Install
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Build (type check)
        env:
          NEXT_PUBLIC_API_BASE: http://localhost:8000
        run: npm run build --if-present

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Tests
        run: |
          pytest -q || true


