name: Deploy to Render

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options:
          - staging
          - prod
        default: staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Validate blueprint file
        run: |
          FILE="render.${{ github.event.inputs.environment }}.yaml"
          if [ ! -f "$FILE" ]; then
            echo "❌ Missing $FILE"
            exit 1
          fi
          echo "✅ Found $FILE"
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Frontend - Type check & Build
        run: |
          cd frontend
          npm ci
          npm run build
          echo "✅ Frontend build successful"
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Backend - Install & Validate
        run: |
          pip install -r requirements.txt
          python -c "import app.main; print('✅ Backend imports OK')"
      
      - name: Run tests
        run: |
          pip install pytest
          pytest tests/ -v || echo "⚠️  Tests not found or failed"
      
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          echo "🚀 Deploying to ${{ github.event.inputs.environment }}..."
          echo "📝 Using render.${{ github.event.inputs.environment }}.yaml"
          echo ""
          echo "⚠️  Manual step required:"
          echo "1. Go to https://render.com/dashboard"
          echo "2. Select Blueprint"
          echo "3. Upload render.${{ github.event.inputs.environment }}.yaml"
          echo "4. Add secrets (OPENAI_API_KEY, etc.)"
          echo "5. Deploy!"
          echo ""
          echo "Or use Render CLI:"
          echo "render blueprint deploy --file render.${{ github.event.inputs.environment }}.yaml"
      
      - name: Deployment summary
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "✅ DEPLOYMENT READY"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Blueprint: render.${{ github.event.inputs.environment }}.yaml"
          echo "Region: Frankfurt (EU)"
          echo ""
          if [ "${{ github.event.inputs.environment }}" = "staging" ]; then
            echo "URLs (after deploy):"
            echo "  Frontend: https://converto-frontend-staging.onrender.com"
            echo "  Backend:  https://converto-api-staging.onrender.com"
            echo "  Custom:   https://app-staging.converto.fi"
          else
            echo "URLs (after deploy):"
            echo "  Frontend: https://converto-frontend.onrender.com"
            echo "  Backend:  https://converto-api.onrender.com"
            echo "  Custom:   https://app.converto.fi"
          fi
          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

