version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    depends_on:
      - redis
      - auth-service
    networks:
      - converto-network
    restart: unless-stopped

  # AI Gateway
  ai-gateway:
    build:
      context: ./ai_gateway
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    networks:
      - converto-network
    restart: unless-stopped

  # OCR Service
  ocr-service:
    build:
      context: ./services/ocr_service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - OCR_LANG=fin+eng
      - TESSDATA_PREFIX=/usr/share/tesseract-ocr/4.00/tessdata
    volumes:
      - ./tessdata:/usr/share/tesseract-ocr/4.00/tessdata
    networks:
      - converto-network
    restart: unless-stopped

  # Vision Service
  vision-service:
    build:
      context: ./services/vision_service
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VISION_MODEL=gpt-4-vision-preview
    networks:
      - converto-network
    restart: unless-stopped

  # Billing Service
  billing-service:
    build:
      context: ./services/billing_service
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/converto_billing
    depends_on:
      - postgres
    networks:
      - converto-network
    restart: unless-stopped

  # Auth Service
  auth-service:
    build:
      context: ./services/auth_service
      dockerfile: Dockerfile
    ports:
      - "8005:8005"
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=HS256
      - JWT_EXPIRE_MINUTES=1440
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/converto_auth
    depends_on:
      - postgres
    networks:
      - converto-network
    restart: unless-stopped

  # Event Bus Service
  event-bus:
    build:
      context: ./services/event_bus
      dockerfile: Dockerfile
    ports:
      - "8006:8006"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=1
    depends_on:
      - redis
    networks:
      - converto-network
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - converto-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=converto_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - converto-network
    restart: unless-stopped

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - converto-network
    restart: unless-stopped

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - converto-network
    restart: unless-stopped

  # Logging - Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - converto-network
    restart: unless-stopped

  # Logging - Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - converto-network
    restart: unless-stopped

  # Logging - Logstash
  logstash:
    image: docker.elastic.co/logstash/logstash:8.8.0
    ports:
      - "5044:5044"
    volumes:
      - ./monitoring/logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch
    networks:
      - converto-network
    restart: unless-stopped

  # Message Queue - Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - converto-network

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - converto-network

  # Load Balancer - Nginx
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway
    networks:
      - converto-network
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:

networks:
  converto-network:
    driver: bridge
