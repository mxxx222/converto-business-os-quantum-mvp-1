version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: converto
      POSTGRES_USER: converto
      POSTGRES_PASSWORD: converto123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U converto"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend (FastAPI)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://converto:converto123@db:5432/converto
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=docker-dev-secret
      - ADMIN_TOKEN=admin123
      - P2E_ENABLED=true
      - SENTRY_DSN=${SENTRY_DSN:-}
    volumes:
      - ./app:/app/app
      - ./shared_core:/app/shared_core
      - ./config:/app/config
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE=http://localhost:8000
      - NEXT_PUBLIC_DEV_JWT=${NEXT_PUBLIC_DEV_JWT:-}
    volumes:
      - ./frontend/app:/app/app
      - ./frontend/components:/app/components
      - ./frontend/modules:/app/modules
      - ./frontend/lib:/app/lib
    depends_on:
      - backend

volumes:
  postgres_data:

